#pragma once

#include "ZActor.h"
#include "ZAnimatedActor.h"
#include "ELogState.h"
#include "ZAnimProgramBase.h"
#include "EActorEmotionState.h"
#include "IActListener.h"
#include "EMoveSpeed.h"

class ZNPCMorphemeNetworkController
{
public:
	ZActor* m_pActor;
	ZMorphemeNetworkInstance* m_pNetwork;
	ZAnimatedActor* m_pAnimatedActor;
	ZMorphemeNetworkInstance* m_pDynamicAct1CN;
	ZMorphemeNetworkInstance* m_pDynamicAct2CN;
	unsigned int m_paramRandomCN1;
	unsigned int m_paramRandomCN2;
	EActorEmotionState m_eReactionTargetState;
	float m_secondsWhilePlayingReaction;
	float m_reactionDurationInSeconds;
	unsigned int m_countActLoops;
	IActListener* m_pActListener;
	bool m_bActInFullbodySignaled : 1;
	bool m_bActResumeOriginalPosition : 1;
	bool m_bUpperBodyOnly : 1;
	bool m_bIsLeaningAtWindow : 1;
	bool m_bEnableNPCHitmanCollision : 1;
	SMatrix m_mActStartMatrix;
	float m_fTimeToStartFullBodyBlend;
	float m_fActUpperBodyBlendTime;
	float m_fActBlendTime;
	unsigned int m_nodeTargetAct;
	unsigned int m_nodeTargetReaction;
	bool m_bActShootRequested : 1;
	bool m_bActBlindfireRequested : 1;
	bool m_bEnableOffHandIK : 1;
	bool m_bOffHandOffsetSet : 1;
	float m_fRecoilWeight;
	float m_fRecoilFraction;
	float m_fImpactTime;
	float m_fDeathAnimationDuration;
	bool m_bDeathRagdollActivated : 1;
	bool m_bAllowDeathAnimations : 1;
	bool m_bDisableImpactAndDeathAnimations : 1;
	float m_transitionTranslationScaling;
	float m_endTransitionRotationScaling;
	float4 m_wsGroundCorrectionTargetPosition;
	float4 m_wsGroundCorrectionTargetDirection;
	EMoveSpeed m_eTransitionMoveSpeed;
	float m_timeToFullStop;
	float m_fCurrentTimeDelta;
	float4 m_wsRequestedAimPosition;
	float4 m_wsRequestedLookPosition;
	unsigned int m_eventLastFootstep;
	bool m_bRightFootEventTriggered : 1;
	bool m_bLeftFootEventTriggered : 1;
	unsigned int nodeCurrentEmotionState;
	unsigned int nodeCurrentLocomotion;
	unsigned int nodeCurrentMove;
	unsigned int nodeCurrentMoveToStand;
	unsigned int nodeCurrentMoveToStandMoveToStandSelect;
	unsigned int nodeCurrentStand;
	unsigned int nodeCurrentStandToMove;
	unsigned int nodeCurrentStandToMoveStandToMoveSelect;
	unsigned int nodeCurrentReposition;
	unsigned int nodeCurrentRepositionStandSelect;
	ELogState m_eLogState;
	ZAnimProgramBase* m_pCurrentProgram;
	bool m_bEnableGroundCorrection : 1;
	float4 m_wsGroundCorrectionTrans;
	float4 m_wsGroundCorrectionDir;
	float4 m_csGroundCorrectionAlignDir;
	float m_fGroundCorrectionTranslationThreshold;
	float m_fGroundCorrectionAttitudeThreshold;
	int idMeshHeadBone;
	int idMeshNeckBone;
	SMatrix m_csHeadTransform;
	SMatrix m_csNeckTransform;
	int idMeshPoseMatchBones[19];
	float4 m_csCurrentAimDirection;
	float4 m_csCurrentLookDirection;

	ZNPCMorphemeNetworkController() = default;
	~ZNPCMorphemeNetworkController() = default;
	void Init(ZAnimatedActor* pAnimatedActor);
	void Reposition(const float4& wsTargetPosition, const float4& wsFacingDirection, bool bDisableTurnInPlace);
	void AmbientReposition(const float4& wsMovingDirection, float distanceToCover, const float4& wsTargetPosition, const float4& wsTargetFacingDirection);
	bool DistanceCanBeCoveredWithAmbientReposition(const float4& wsMovingDirection, float distanceToCover, const float4& wsTargetFacingDirection);
	void StandToMove(const float4& wsMovingDirection, EMoveSpeed eTargetSpeed, bool bAllowStrafe, const float4& wsTargetPosition);
	void ForceStand();
	void MoveToStand(const SMatrix& pathEndMatrix, const float4& wsTargetPosition, const float4& wsFacingDirection, float fPositionThreshold, bool bPreciseOrientation, bool bEndInCrouch);
	void Move(const float4& wsTargetFacingDirection, const float4& wsTargetMovingDirection, float fTargetMoveSpeed, float fTargetSlope, float fTargetBanking, float fTargetStyle);
	void StartAim(int idBone, const float4& wsAimPosition);
	void StartActAim(int idBone, const float4& wsAimPosition);
	void Aim(const float4& wsAimPosition);
	void StopAim();
	void StopActAim();
	bool IsWithinAimingCone(const float4& wsAimPosition, float fPercentageOfCone);
	void StartLooking(const float4& wsLookPosition);
	void Look(const float4& wsLookPosition);
	void StopLooking();
	void Recoil();
	bool PlayImpact(unsigned int nGlobalBoneID, const float4& csImpactDirection, float fRemainingPathDistance);
	bool PlayStumble(bool bFront, bool bRight);
	void StaticAct(const ZString& sActName, const SMatrix& actMatrix, float fPositionThreshold, bool bPreciseOrientation, EActBodyType eActType, IActListener* pListener, bool bResumeOriginalPosition);
	void DynamicAct(const TEntityRef<IChildNetworkEntity>& pChildNetworkEntity, const SMatrix& actMatrix, float fPositionThreshold, bool bPreciseOrientation, EActBodyType eActType, IActListener* pListener, bool bResumeOriginalPosition);
	bool StopAct(bool bStopActFast);
	void React(const ZString& sReactionName, EActorEmotionState eTargetState, const float4& wsFacingDirection, bool bPrecisePositioning);
	void Die(const float4& csImpactDirection, bool bPlayAnimation, unsigned int nGlobalBoneID);
	bool FindEnterCoverAct(const TRefCountPtr<ZPF5Path>& path, const float4& vCoverPosition, const float4& vCoverDirection, bool bIsLowCover, bool bJumpOver, SCoverActInfo& info);
	bool FindCoverShootAct(bool bIsLowCover, bool bBlindfire, ECoverPosition coverPosition, const float4& vTargetPosition, SCoverActInfo& info, const ZPF5Location& location);
	bool CanDoLocomotion() const;
	bool CanStopAct() const;
	bool CanStartAct(EActBodyType eActType, float fTimeToFullbodyActStart, bool bMovingStart) const;
	bool CanDoReaction() const;
	bool CanStrafe() const;
	void Update(float timeDelta);
	void LowFrequencyUpdate();
	void SetCurrentProgram(ZAnimProgramBase* pProgram);
	EActorEmotionState GetEmotionState() const;
	bool IsMoving() const;
	bool IsStrafing() const;
	bool IsInMoveToStandTransition() const;
	bool IsInStandToMoveTransition() const;
	bool IsStanding() const;
	bool IsRepositioning() const;
	bool IsActing() const;
	bool GetCurrentlyPlayingCoverShootActInfo(bool& bLowCoverShootAct, ECoverPosition& eShootActCoverPosition, unsigned int& nCoverShootIndex) const;
	bool IsBlendingOutOfAct() const;
	bool HasLocomotionControlledByAct() const;
	bool IsFullbodyActing() const;
	bool IsBlendingToUpperbodyActing() const;
	bool IsInActLoop() const;
	unsigned int GetActLoopCount() const;
	bool IsReacting() const;
	bool IsInAimSupportedLocomotionState() const;
	bool InArmedState() const;
	bool InCombat() const;
	bool InAmbient() const;
	bool IsLooking() const;
	bool IsAiming() const;
	bool IsActAiming() const;
	bool IsNPCHitmanCollisionEnabled() const;
	bool IsPlayingImpact() const;
	bool IsFullyInImpact() const;
	bool HasWeaponLowered() const;
	bool IsLoweringOrRaisingWeapon() const;
	bool IsDeathRagdollActivated() const;
	bool CanShoot() const;
	bool ActShootRequested() const;
	bool ActBlindfireRequested() const;
	bool IsCrouching() const;
	bool IsControlled() const;
	float GetCurrentMoveSpeed() const;
	EMoveSpeed GetCurrentDiscreteMoveSpeed() const;
	EMoveSpeed GetLastTransitionMoveSpeed() const;
	float GetTargetMoveSpeed() const;
	EMoveSpeed GetTargetDiscreteMoveSpeed() const;
	float GetBestMatchingMoveSpeedParam(float fRequestedSpeed) const;
	float GetCurrentStepLength() const;
	float GetStepLengthForSpeed(EMoveSpeed eMoveSpeed) const;
	float4 GetCurrentPosition() const;
	float4 AimDirectionFromAimPosition(const float4& wsAimPosition) const;
	float4 GetGroundCorrectionTargetPosition() const;
	bool HasGroundCorrectionTargetPosition() const;
	SMatrix GetCurrentTransform() const;
	SMatrix GetHeadToWorldTransform() const;
	SMatrix GetNeckToWorldTransform() const;
	float4 GetCurrentFacingDirection() const;
	float4 GetCurrentMovingDirection() const;
	float4 GetCurrentAimingDirection() const;
	bool IsAtLeftFoot(unsigned int nodeClosestMoveAnimation) const;
	bool IsAtLeftFoot() const;
	bool IsLeaningAtWindow() const;
	float GetMoveStepFraction() const;
	bool LeftFootEventJustTriggered() const;
	bool RightFootEventJustTriggered() const;
	float GetRemainingImpactAnimationDisplacement() const;
	float GetStopAnimationDisplacement(const SMatrix& pathEndMatrix, const float4& wsFacingDirection, bool bPreciseOrientation, bool bEndInCrouch, float& fAnimationDuration) const;
	float GetStopAnimationSpeed(const SMatrix& pathEndMatrix, const float4& wsFacingDirection, bool bPreciseOrientation, bool bEndInCrouch) const;
	float GetStartAnimationInfo(const float4& wsMovingDirection, EMoveSpeed eTargetSpeed, bool bAllowStrafe, float& fAnimationDuration, float& fTranslationDelay) const;
	float GetMoveAnimationSpeed(EMoveSpeed moveSpeed) const;
	float GetMoveAnimationStepLength(EMoveSpeed moveSpeed) const;
	float GetStyleAnimationSpeed() const;
	float GetRepositionAnimationDuration(const float4& wsTargetPosition) const;
	SRepositionCapabilities GetRepositionAnimationCapabilities() const;
	EMoveSpeed DiscreteSpeedFromNormalizedSpeed(float fMoveSpeed, ERoundOption roundOption) const;
	float NormalizedSpeedFromDiscreteSpeed(EMoveSpeed eMoveSpeed) const;
	void TryGetTimeToFullbodyActStart(ZMorphemeNetworkInstance* pChildNetworkInstance, float& fTimeToFullbodyActStart);
	void TryGetTimeToFullbodyActStart(const TEntityRef<IChildNetworkEntity>& pChildNetworkEntity, float& fTimeToFullbodyActStart);
	void TryGetTimeToFullbodyActStart(const ZString& sActName, float& fTimeToFullbodyActStart);
	void ActivateDeathRagdoll();
	void EnableImpactAndDeathAnimations(bool bEnable);
	void UpdateOffHandIK();
	void SetSequenceWeight(float weight, unsigned int track);
	void SetSequenceFeatherWeight(float weight, unsigned int track);
	float GetSequenceWeight(unsigned int track) const;
	float GetSequenceFeatherWeight(unsigned int track) const;
	void BlendOutSequenceWeights();
	bool IsInSequence() const;
	void OnFullBodySequence();
	void OnEnteringControlledState(EControlledStates controlledState);
	void OnLeavingControlledState();
	void SetControlledWeight(float weight);
	float GetControlledWeight() const;
	void SetGroundCorrectionDirection(const float4& wsDirection);
	void SetGroundCorrectionAlignDirection(const float4& csAlignDirection);
	void ResetReactionForTeleportationOrControlled();
	bool SetDynamicActControlParameter(const ZString& paramName, float value);
	unsigned int GetNodeForControlledState(EControlledStates controlledState);
	unsigned int GetRigBoneIndexFromGlobalBoneIndex(int idBone);
	void CacheNodeIDs();
	void DetectNodeIDsFromCurrentEmotionState();
	void HandleCommonAnimationEvents();
	void HandleReactionRelatedAnimationEvents();
	void StartReaction(unsigned int nodeReactionLayer, const ZString& sReactionName, const float4& wsFacingDirection, bool bPrecisePositioning);
	void StopReactionAndSwitchToTargetState();
	bool IsBlendingBetweenTwoReactions() const;
	bool IsBlendingOutOfReaction() const;
	void SwitchToEmotionState(EActorEmotionState eState);
	unsigned int SetStandToMoveSubstateAndGetSelectNode();
	unsigned int SetMoveToStandSubstateAndGetSelectNode(bool bEndInCrouch);
	unsigned int SetTransitionParamsAndGetSelectedNode(int nodeSelect, const STransitionParamsRequest& request, ELocomotionTransition eTransition);
	unsigned int GetMoveToStandSelectNode(bool bEndInCrouch) const;
	unsigned int GetStandToMoveSelectNode() const;
	unsigned int GetRepositionSelectNode() const;
	void SetMovingDirection(const float4& wsNextFacingDirection, const float4& wsNextMovingDirection);
	void SetCharacterSpaceMovingDirection(const float4& csNextMovingDirection);
	unsigned int SetRepositionSubstateAndGetSelectNode();
	void StartAct(unsigned int nodeActsCollection, const TEntityRef<IChildNetworkEntity>& pChildNetworkEntity, EActBodyType eActType);
	void StartAct(unsigned int nodeActsCollection, const ZString& sActName, EActBodyType eActType);
	void HandleActRelatedAnimationEvents();
	bool IsBlendingBetweenTwoActs() const;
	bool IsBlendingInAct() const;
	void CleanupDynamicActIfAny(unsigned int nodeDynamicAct, unsigned int nodeDynamicActCN);
	void UpdateRecoil(float fTimeDelta);
	void UpdateAct(float fTimeDelta);
	void UpdateImpact(float fTimeDelta);
	void StopImpact();
	void UpdateDeath(float fTimeDelta);
	void AbortActs();
	void LeaveAct();
	void InterpolateParamTo(unsigned int paramId, float fTargetValue, float fParamChangeTime);
	STransitionParamsRequest ComputeStoppingTransitionParams(const SMatrix& pathEndMatrix, const float4& wsFacingDirection, bool bPreciseOrientation) const;
	STransitionParamsRequest ComputeStartingTransitionParams(const float4& wsMovingDirection, EMoveSpeed eTargetSpeed, bool bAllowStrafe) const;
	float ComputeTimeToFullStop(unsigned int nodeSelectedAnimation) const;
	unsigned int GetNumberOfMoveSpeeds() const;
	float4 GetAimFromPoint() const;
	void InternalStartAim(int idBone);
	void InitializeAimingPoint(const float4& wsAimPosition);
	float4 RestrictToLookingAndAimingCone(const float4& psAimDirection) const;
	float4 GetCurrentChestDirection() const;
	float4 GetLookFromPoint() const;
	float4 GetCurrentLookingDirection() const;
	void InitializeLookAtPoint(const float4& wsLookPosition);
	float4 ToNeckCylindricalMapping(const float4& csLookingDirection) const;
	float4 FromNeckCylindricalMapping(const float4& psLookingDirection) const;
	void SignalActLoopStarted();
	void SignalActInFullbody();
	void SignalActBehaviorEvent(unsigned int idEvent, float fWeight);
	void SignalActFinishedAndClearListener();
	void UpdateGroundCorrection();
	void ComputeAndCacheDerivedProperties();
	void OnDynamicActAttached(unsigned int nodeActCN);
	void OnDynamicActDetached(unsigned int nodeActCN);
	void SetRandomParameterOnNetworkAndChildNetworks();
	void EnableGroundCorrection(const float4& wsTranslation, const float4& wsDirection, float fTranslationThreshold, float fAttitudeThreshold, const float4& csAlignDirection);
	void DisableGroundCorrection();
	bool IsGroundCorrectionEnabled() const;
	float4 GetGroundCorrectionDirection() const;
	float GetGroundCorrectionDirectionThreshold() const;
	unsigned int FindBestMatchingReaction(unsigned int nodeSubReaction, const float4& wsFacingDirection, float4& csReactionTranslation, float& fReactionDuration);
	void GetBasePoseForMatching(TArray<SQV>& dstBoneCache, unsigned int nToNode, float fTimeFraction);
	float1 RatePotentiallyMatchingPose(const TArray<SQV>& dstBoneCache, unsigned int nFromNode, float fFromTime, int nMatchIndex);
};
